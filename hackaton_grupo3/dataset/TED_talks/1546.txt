Clay Shirky: Cómo Internet (algún día) transformará el gobierno
El mundo del código abierto ha aprendido a hacer frente a una avalancha de ideas nuevas, a menudo divergentes, que usan servicios de alojamiento como GitHub. Así que, ¿por qué no pueden hacerlo los gobiernos? En esta charla emocionante, Clay Shirky muestra cómo las democracias pueden aprender una lección de Internet para no sólo ser transparentes, sino también para aprovechar los conocimientos de todos sus ciudadanos.
Hoy quiero hablarles de algo: el mundo de la programación de código abierto puede enseñar democracia, pero antes, un pequeño preámbulo. Empecemos aquí. Esta es Martha Payne, escocesa, de 9 años y vive en el Consejo de Argyll y Bute. Hace un par de meses, Payne abrió un blog de comida llamado NeverSeconds; llevaba su cámara todos los días para documentar sus almuerzos escolares. ¿Pueden ver la verdura? (Risas) Y, como ocurre a veces, este blog primero recibió decenas de lectores, después cientos de lectores y luego miles, personas que ingresaban para ver su calificación de almuerzos, que incluye mi categoría favorita: "Pelos en los alimentos". (Risas) Este día no hubo cabellos. Eso es bueno. Pero ayer hizo dos semanas que ella publicó una nota que decía: "Adiós". Decía: "Siento mucho decirte esto pero el director hoy me sacó de la clase y dijo que ya no puedo sacar fotos en el comedor. Realmente me gustaba hacerlo. Gracias por leer. Adiós". Pueden imaginar lo que ocurrió después, ¿no? (Risas) La indignación fue tan repentina, tan numerosa, tan unánime, que el Consejo de Argyll y Bute dio marcha atrás el mismo día y dijo: "Nunca censuraríamos a una niña de 9 años". (Risas) Salvo, claro, esta mañana. (Risas) Y esto trae a colación la pregunta: ¿qué les hizo pensar que podían salirse con la suya? (Risas) Y la respuesta es: la historia humana hasta ahora. (Risas) Entonces, ¿qué ocurre cuando un medio de repente pone en circulación un montón de ideas nuevas? Pero esta no es una cuestión contemporánea. Es algo que hemos enfrentado varias veces en los últimos siglos. Cuando surgió el telégrafo estaba claro que iba a globalizar el mundo de las noticias. Y esto, ¿a qué llevaría? Bueno, obviamente, llevaría a la paz mundial. La televisión, un medio que nos permitió no sólo oír sino ver, literalmente ver, qué estaba ocurriendo en otras partes del mundo, ¿eso a qué conllevaría? A la paz mundial. (Risas) ¿El teléfono? Adivinaron: a la paz mundial. Siento decirlo, pero no trajo la paz mundial. Todavía no. Incluso la imprenta, incluso la imprenta se suponía que era una herramienta que impondría la hegemonía intelectual católica en toda Europa. En cambio, trajo "Las 95 tesis" de Martín Lutero, la Reforma Protestante y, ya saben, la Guerra de los Treinta Años. De acuerdo, pero en lo que todas estas predicciones de paz acertaron es que cuando, de repente, empiezan a circular muchas ideas nuevas, eso cambia la sociedad. Se equivocaron en lo que ocurriría después. Cuanto más ideas hay en circulación, hay más ideas con las que no estar de acuerdo a nivel individual. Más medios siempre significa más discusiones. Eso es lo que ocurre cuando se expande el espacio de medios. Sin embargo, si nos retrotraemos a la imprenta en los primeros años, nos gusta lo que pasó. Somos una sociedad proimprenta. Entonces, ¿cómo conciliar esas dos cosas? nos lleva a discusiones, pero ¿nos parece algo bueno? Creo que la respuesta está en este tipo de cosas. Esta es la portada de "Philosophical Transactions", la primera revista científica publicada en inglés a mediados del siglo XVII, creada por un grupo de personas que se autodenominaba "El Colegio Invisible", un grupo de filósofos de la naturaleza que sólo más tarde se autodenominarían científicos, que querían mejorar la forma en que los filósofos naturales discutían y para eso tenían que hacer dos cosas. Necesitaban apertura. Tenían que crear una norma que dijera, cuando uno hace un experimento tiene que publicar no sólo sus afirmaciones, sino cómo hizo uno el experimento. Si no nos dices cómo lo hiciste, no te creeremos. Lo otro que necesitaban era velocidad. Tenían que sincronizar rápidamente con lo que sabían otros filósofos naturales. De otro modo, no se podrían mantener las discusiones apropiadas. Claramente, la imprenta era el medio correcto para esto, pero el libro era la herramienta incorrecta. Era demasiado lento. Fue así que inventaron la revista científica como una forma de sincronizar la discusión en la comunidad de científicos naturales. La revolución científica no fue producto de la imprenta. Fue producto de los científicos pero no se habría creado de no haber contado con la herramienta de la imprenta. Y, ¿qué hay de nosotros, de nuestra generación y de nuestra revolución mediática, Internet? Bueno, ¿predicciones de paz? Verifiquen. (Risas) ¿Más discusión? Premio de oro para esa. (Risas) Digo, YouTube es una mina de oro. (Risas) ¿Mejor discusión? Esa es la cuestión. Por eso estudio medios sociales, es decir, en una primera aproximación, veo a la gente discutir. Y si tuviera que elegir un grupo que creo es nuestro Colegio Invisible, es el grupo humano de nuestra generación que trata de tomar estas herramientas y plasmarlas en servicio no en busca de más, sino de mejores discusiones, me quedaría con los programadores de código abierto. La programación es una relación tripartita entre un programador, algo de código y la computadora que lo ejecuta; pero las computadoras son célebres por interpretar instrucciones de forma inflexible. Es extremadamente difícil escribir un conjunto de instrucciones que la computadora sepa ejecutar y eso si interviene una sola persona. En cuanto pones a más de una persona a programar, es muy fácil que cualquiera sobrescriba el trabajo del otro si trabajan en el mismo archivo, o que envíen instrucciones incompatibles que simplemente provoquen un colapso y este problema se acrecienta conforme intervienen más programadores. En una primera aproximación, el problema de gestionar un gran proyecto de software consiste en mantener bajo control este caos social. Ahora, durante décadas ha existido una solución canónica a este problema, que implica usar algo llamado "sistema de control de versiones". Y un sistema de control de versiones hace justamente eso. Proporciona una copia canónica del software de un servidor de algún lado. Los únicos programadores que pueden modificarlo son aquellos con permisos específicos para acceder al mismo, y sólo pueden acceder a la subsección de código sobre la que tienen permisos de edición. Y al graficar diagramas de sistemas de control de versiones, los diagramas siempre tienen un aspecto como éste. Correcto. Parecen organigramas. Y no hay que esforzarse mucho para ver las ramificaciones políticas de un sistema como este. Es feudalismo: un propietario, muchos obreros. Está bien para la industria del software comercial. Es el Office de Microsoft. Es el Photoshop de Adobe. La empresa es propietaria del software. Los programadores van y vienen. Pero hubo un programador que decidió que esta no era forma de trabajar. Se trata de Linus Torvalds. Torvalds es el programador de código abierto más famoso; creó Linux, obviamente, y observó la manera en la que el movimiento de código abierto había abordado el problema. El software de código abierto, la promesa central de la licencia de código abierto, es que todos deberían tener acceso al código fuente todo el tiempo, pero claro, esto crea la amenaza del caos que hay que evitar para conseguir que algo funcione. La mayoría de los proyectos de código abierto asomaron la nariz y adoptaron el sistema de gestión feudal. Pero Torvalds dijo: "No, no lo haré". Su punto de vista sobre este tema fue muy claro. Cuando uno adopta una herramienta, también adopta la filosofía de gestión que conlleva esa herramienta y él no adoptaría algo que no funcionara a la manera de la comunidad de Linux. Y para darles una idea de lo enorme que era una decisión así, este es el mapa de las dependencias internas de Linux dentro del sistema operativo Linux, qué subpartes del programa dependen de otras subpartes para funcionar. Es un proceso sumamente complicado. Es un programa sumamente complicado y sin embargo, durante años, Torvalds lo dirigió no con herramientas automatizadas, sino desde su correo. Las personas literalmente le enviaban los cambios que habían acordado, y él los combinaba a mano. Y luego, 15 años después, al mirar Linux y analizar el trabajo de la comunidad dijo: "Creo que sé cómo escribir un sistema de control de versiones para personas libres". Y lo llamó "Git". Git es un control de versiones distribuido. Tiene dos grandes diferencias con los sistemas tradicionales de control de versiones. La primera es que hace honor a la promesa filosófica del código abierto. Todo el que trabaja en un proyecto tiene acceso a todo el código fuente, todo el tiempo. Y al graficar el flujo de trabajo de Git se usan gráficos que tienen este aspecto. Y no hay que entender el significado de los círculos, las cajas y las flechas para ver que ésta es una forma mucho más complicada de trabajar que la provista por los sistemas comunes de control de versiones. Pero esto es también lo que trae nuevamente el caos, y esta es la segunda gran innovación de Git. Esta es una captura de pantalla de GitHub, el principal servicio de alojamiento de Git, y cada vez que un programador usa Git para hacer cualquier tipo de cambio, para crear un nuevo archivo o modificar uno existente, para combinar dos archivos, Git crea esta firma. Esta larga cadena de números y letras de aquí es un identificador único asociado a cada cambio, pero sin una coordinación central. Cada sistema Git genera este número de la misma manera, lo que significa que es una firma infalsificable asociada directamente a un cambio particular. Esto tiene el siguiente efecto: un programador en Edimburgo y uno en Entebbe pueden ambos tomar una copia del mismo software. Cada uno puede hacer cambios y combinarlos después de eso, incluso desconociendo de antemano la existencia el uno del otro. Esto es cooperación sin coordinación. Este es el gran cambio. Pero no les cuento todo esto para convencerlos de que es genial que los programadores de código abierto tengan una herramienta que respalde su filosofía de trabajo, aunque creo que es genial. Les cuento todo esto por lo que creo que significa en materia de unión de comunidades. En cuanto Git permitió la cooperación sin coordinación, se empezaron a ver formas comunitarias enormemente grandes y complejas. Este es un gráfico de la comunidad de Ruby. Es un lenguaje de programación de código abierto y todas las conexiones interpersonales —este ya no es un gráfico del software, sino de personas— todas las interconexiones entre personas que trabajan en ese proyecto... no parece un organigrama. Parece un "desorganigrama" y no obstante en esta comunidad, usando estas herramientas, ahora pueden crear algo juntos. Hay dos grandes razones para pensar que este tipo de técnica puede aplicarse a las democracias en general y en particular a la ley. De hecho, si uno afirma que algo de Internet será bueno para la democracia, a menudo obtiene esta reacción. (Música) (Risas) ¿Estás hablando del video de los gatos que cantan? ¿Eso es lo que crees que será bueno para la sociedad? A lo que respondo que el quid de los gatos que cantan es que siempre ocurre. Y no sólo quiero decir que ocurre con Internet, me refiero a que siempre ocurre con los medios, punto. No pasó mucho tiempo luego del auge de la imprenta comercial hasta que alguien se dio cuenta de que las novelas eróticas eran una buena idea. (Risas) No hizo falta un incentivo económico para vender libros; mucho antes alguien dijo: "¿Sabes lo que apuesto? que la gente comprará". (Risas) Hicieron falta otros 150 años para que la gente pensara en la revista científica, ¿sí? (Risas) (Aplausos) El aprovechamiento que el Colegio Invisible hizo de la imprenta para crear la revista científica fue extraordinariamente importante, pero no ocurrió a lo grande, tampoco ocurrió en forma rápida. Para ver desde dónde viene el cambio hay que mirar en los márgenes. La ley también tiene una relación de dependencia. Este es un gráfico del Código Fiscal de EE.UU., y la dependencia de una ley de otras leyes para el efecto conjunto. Allí está como sitio para la gestión de código fuente. Pero también está el hecho de que la ley es otro lugar donde circulan muchas opiniones, pero tienen que resolverse en una copia canónica. Y si vamos a GitHub y miramos los alrededores hay millones y millones de proyectos, casi todos de código fuente, pero si miramos en los bordes, se puede ver a la gente que experimenta con las ramificaciones políticas de un sistema como ese. Alguien puso todos los cables filtrados del Departamento de Estado, junto con el software usado para interpretarlos; eso incluye mi uso favorito de las filtraciones: una herramienta para detectar haikus naturales en la prosa del Departamento de Estado. (Risas) Correcto. (Risas) El Senado de Nueva York puso algo llamado Open Legislation, también alojado en GitHub, nuevamente, debido a razones de actualización y fluidez. Se puede ir, seleccionar un senador y luego ver los proyectos de ley que patrocinó. Alguien con seudónimo Divegeek subió el código de Utah, las leyes del estado de Utah, y lo subieron allí no sólo para distribuir el código, sino con la posibilidad muy interesante de que esto pueda usarse para favorecer el desarrollo de la legislación. Alguien subió una herramienta durante el debate de derechos de autor el año pasado en el Senado, que decía: "Es extraño que Hollywood tenga más acceso a los legisladores canadienses que los ciudadanos canadienses. ¿Por qué no usar GitHub para mostrarles cómo sería un proyecto de ley ciudadano?" Esta es una captura de pantalla muy evocadora. Esto se llama "diff", esto de la derecha. Muestra, en un texto editado por muchas personas, cuándo se hizo un cambio, quién lo hizo y cuál es el cambio. Lo que está en rojo es lo que se borró. Lo que está en verde es lo que se añadió. Los programadores dan esto por sentado. Ninguna democracia del mundo ofrece esta posibilidad a sus ciudadanos para la legislación o para los presupuestos, a pesar de ser cosas hechas con nuestro consentimiento y nuestro dinero. Me encantaría decirles que el hecho de que los programadores de código abierto hayan elaborado un método colaborativo a gran escala, distribuido, económico, en sintonía con los ideales democráticos, me encantaría decirles que dado que existen esas herramientas, la innovación es inevitable. Pero no lo es. Parte del problema, por supuesto, es sólo falta de información. Alguien publicó una pregunta en Quora: "¿Por qué los legisladores no usan control de versiones distribuido?" Esta es la respuesta gráfica. (Risas) (Risas) (Aplausos) De hecho, eso es parte del problema, pero sólo parte. El problema más grande, claro, es el poder. Las personas que experimentan la participación no tienen poder legislativo, y las personas que tienen poder legislativo no experimentan la participación. Están experimentando la apertura. No hay democracia que se precie que no tenga una medida de transparencia, pero la transparencia es la apertura en una sola dirección, y otorgar un tablero sin volante nunca ha sido una promesa troncal de una democracia a sus ciudadanos. Piénsenlo. Lo que llevó las opiniones de Martha Payne al público fue una pieza de tecnología, pero lo que las mantenía era la voluntad política. Fue la expectativa de los ciudadanos de que ella no fuera censurada. Ese es el estado actual de estas herramientas colaborativas. Las tenemos. Las hemos visto. Funcionan. ¿Podemos usarlas? ¿Podemos aplicar las técnicas que funcionaron aquí, allí? T.S. Eliot dijo una vez: "Una de las cosas más trascendentales que le puede ocurrir a una cultura es adquirir una nueva forma de prosa". Creo que eso está mal, pero... (Risas) Creo que está bien para discutir. ¿Cierto? Algo trascendental que puede ocurrirle a una cultura es adquirir un nuevo estilo de discusión: juicio por jurado, voto, revisión por pares, ahora esto. ¿Bien? En nuestra vida, se ha inventado una nueva forma de discusión; en la última década, de hecho. Es en grande, distribuida, económica y compatible con los ideales democráticos. La pregunta ahora es, ¿dejaremos que los programadores se la guarden para sí mismos? ¿O trataremos de tomarla para ponerla al servicio de la sociedad en general? Gracias por escuchar. (Aplausos) (Aplausos) Gracias. Gracias. (Aplausos)
