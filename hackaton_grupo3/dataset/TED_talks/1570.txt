Shimon Schocken: El curso de informática autoorganizado
Shimon Schocken y Noam Nisan desarrollaron un plan de estudios para que sus estudiantes construyeran una computadora, pieza a pieza. Cuando pusieron el curso en línea —ofreciendo herramientas, simuladores, especificaciones de chips y otros bloques de construcción—  se sorprendieron al ver la avalancha de miles de personas dispuestas a no dejar pasar la oportunidad de aprender, trabajar en forma independiente, así como de organizar sus propias clases en el primer MOOC (sigla en inglés de Massive Open Online Course). Invita a olvidarse de las calificaciones y a aprovechar la automotivación para aprender.
Este es mi abuelo Salman Schocken, de familia pobre y sin formación, con seis hijos que alimentar, a los 14 años se vio obligado a abandonar la escuela para ayudar a traer el pan a casa. Nunca regresó a la escuela. En su lugar, siguió construyendo un imperio reluciente de grandes almacenes. Salman era un perfeccionista consumado y cada una de sus tiendas era una joya de la arquitectura Bauhaus. Fue también un eximio autodidacta, y, como todo lo demás, lo hizo a lo grande. Se rodeó de un séquito de académicos jóvenes y desconocidos como Martin Buber, Shai Agnon y Franz Kafka. Les pagó un salario mensual para que pudieran escribir en paz. Y, a fines de los años 30, Salman se las vio venir. Huyó de Alemania, junto con su familia, dejando todo atrás. Con sus grandes almacenes confiscados, pasó el resto de su vida en una búsqueda incesante del arte y la cultura. Este desertor escolar murió a los 82 años; intelectual formidable, cofundador y primer director de la Universidad Hebrea de Jerusalén, fundador de Schocken Books, una editorial de renombre, más tarde adquirida por Random House. Ser autodidacta implica ganar poder. Estos son mis padres. No gozaron del privilegio de una educación universitaria. Estaban demasiado ocupados construyendo una familia, y un país. Sin embargo, como Salman, toda la vida fueron autodidactas tenaces y nuestra casa estaba repleta de miles de libros, discos y obras de arte. Recuerdo nítidamente a mi padre que me decía que cuando todos en el barrio tuvieran un televisor, entonces compraríamos una radio FM normal. (Risas) Y ese soy yo, iba a decir con mi primer ábaco pero, en realidad, estoy con lo que mi padre consideraría un sustituto holgado del iPad. (Risas) Algo que aprendí en casa es esta noción de que los educadores no necesariamente tienen que enseñar. En vez de eso, pueden brindar un entorno y los recursos para desentrañar nuestra capacidad natural autodidacta. Estudiar, explorar y dotarse de poder autónomamente: son las virtudes de una gran educación. Y me gustaría compartir la historia de un curso de informática para estudiar y adquirir poder por uno mismo que creamos junto con mi brillante colega Noam Nisan. Como puede verse en las fotos, tanto Noam como yo tuvimos una fascinación temprana por los principios fundamentales, y con los años, conforme nuestro conocimiento de la ciencia y la tecnología se fue sofisticando, esta fascinación inicial por lo básico no hizo más que intensificarse. Por eso, no es de sorprender que, hace unos 12 años, cuando Noam y yo ya éramos profesores de informática, estábamos igualmente frustrados por el mismo fenómeno. Conforme las computadoras se volvían más complejas nuestros estudiantes, buscando el árbol, no veían el bosque y, de hecho, es imposible conectar con el alma de la máquina si uno interactúa con la caja negra de una PC o Mac que está envuelta en varias capas de software propietario cerrado. Por eso Noam y yo pensamos que si queríamos que los estudiantes entendieran el funcionamiento de las máquinas, que lo entendieran cabalmente, entonces quizá la mejor manera de hacerlo era hacerles construir hardware y software completo, que funcionara con un uso general, útil, desde cero, con los principios fundamentales. Teníamos que empezar por algún lado, así que Noam y yo decidimos basar nuestra cátedra, por así decirlo, en el bloque más simple posible, algo llamado NAND. No es más que una compuerta lógica elemental con cuatro estados de entrada-salida. Empezamos este viaje diciéndoles a los estudiantes que Dios nos dio el NAND (Risas) y nos dijo que hiciéramos computadoras, y cuando peguntamos cómo, Dios dijo: "Paso a paso". Y luego, siguiendo este consejo, empezamos con esta modesta y humilde compuerta NAND y guiamos a nuestros estudiantes por una secuencia elaborada de proyectos en lo que gradualmente construyen unos chips, una plataforma de software, un ensamblador, una máquina virtual, un sistema operativo básico y el compilador de un lenguaje simple tipo Java que llamamos "JACK". Los estudiantes celebran el final de este "tour de force" usando JACK para escribir todo tipo de juegos geniales como Pong, Snake y Tetris. Se imaginarán la enorme alegría de jugar con un Tetris que uno mismo escribió en JACK y luego compiló en lenguaje máquina en un compilador que también escribió, y luego ver el resultado ejecutando en una máquina que uno construyó partiendo de nada más que unos miles de compuertas NAND. Es un triunfo personal enorme partir de principios fundamentales para llegar a un sistema extremadamente complejo y útil. Noam y yo trabajamos cinco años para facilitar este ascenso y crear las herramientas y la infraestructura para que los estudiantes construyan esto en un semestre. Y este es el gran equipo que nos ayudó a realizarlo. El truco consistió en descomponer la construcción en muchos módulos independientes, que pudiesen especificarse de forma individual, y construirse y probarse de manera aislada del resto del proyecto. Desde el primer día, Noam y yo decidimos poner a disposición estos bloques libremente como código abierto en la Web. Dejamos especificaciones de chips, APIs, especificaciones del proyecto, simuladores de hardware, emuladores de CPU, pilas de cientos de diapositivas, conferencias... dejamos todo eso en la Web e invitamos al mundo a venir y tomar lo que necesitara y hacer lo que quisiera con esto. Y entonces ocurrió algo fascinante. El mundo vino. Y, en poco tiempo, miles de personas estaban construyendo nuestra máquina. Así, NAND2Tetris fue uno de los primeros cursos web abiertos y masivos, aunque hace siete años no teníamos ni idea de que eso en inglés se llamaba MOOC. Sólo notábamos cómo se desprendían cursos autoorganizados espontáneamente a partir de nuestros materiales. Por ejemplo, Pramode C.E., un ingeniero de Kerala, India, ha organizado grupos de autodidactas que construyen nuestra máquina bajo su buena dirección. Y Parag Shah, otro ingeniero, de Mumbai, desagregó nuestros proyectos en partes más pequeñas y manejables que ahora ofrece en su programa aficionado de ciencias de la computación. Las personas atraídas por estos cursos por lo general tienen mentalidad de 'hacker'. Quieren saber cómo funcionan las cosas, y quieren hacerlo en grupos, como este club de hackers en Washington, DC, que usa nuestros materiales en cursos comunitarios. Y como estos materiales están ampliamente disponibles y son de código abierto, las personas pueden cambiar el rumbo en direcciones imprevistas. Por ejemplo, Yu Fangmin, de Guangzhou, ha usado la tecnología FPGA para construir nuestra computadora y mostrarle a otros cómo hacer lo mismo mediante un video y Ben Craddock desarrolló un videojuego muy bonito en nuestra arquitectura de CPU, un laberinto 3D bastante complejo desarrollado por Ben con el simulador Minecraft 3D. La comunidad de Minecraft se volvió loca con este proyecto y Ben se convirtió en una celebridad mediática. Y, en efecto, para algunas personas emprender esta peregrinación del NAND2Tetris, si se quiere, se ha convertido en una experiencia que les cambió la vida. Por ejemplo, Dan Rounds, músico y especialista en matemática de East Lansing, Michigan. Hace pocas semanas, Dan publicó un mensaje victorioso en nuestro sitio, y me gustaría leérselo. Esto es lo que dijo Dan: "Hice el curso porque entender la computación es tan importante para mí como la alfabetización y la aritmética, y lo logré. Nunca antes había trabajado tan arduamente en algo, nunca antes enfrenté semejante desafío. Pero sabiendo como ahora sé de lo que soy capaz, sin duda lo volvería a hacer. Para quien esté considerando hacer NAND2Tetris, es un viaje difícil, pero te cambiará significativamente". Dan demostró que muchos autodidactas toman este curso desconectados, a su propio ritmo, por iniciativa propia, y es muy sorprendente porque a estas personas no podría importarles menos las calificaciones. Lo hacen motivados por una sola cosa. Sienten una enorme pasión por aprender. Y con eso en mente, me gustaría decir unas palabras sobre las calificaciones universitarias tradicionales. Estoy harto de ellas. Las calificaciones nos obsesionan, porque nos obsesionan los datos. Las calificaciones le quitan la diversión al fracaso, y la educación en gran medida consiste en fracasar. El valor, según Churchill, es la capacidad de ir de un fracaso a otro sin perder el entusiasmo. (Risas) Y [Joyce] dijo que los errores son los portales del descubrimiento. Y, sin embargo, no toleramos los errores y adoramos las calificaciones. Juntamos los regulares y los buenos y los consolidamos en un número como 3,4 que está estampado en tu frente y resume lo que eres. Bueno, en mi opinión, fuimos demasiado lejos con esta tontería y la calificación se tornó "des-calificación". Con eso, me gustaría decir unas palabras sobre la actualización, y compartir con Uds. una idea de mi proyecto actual, que es diferente del anterior, pero comparte las mismas características de aprender haciéndolo uno mismo, de la exploración personal y el desarrollo comunitario y abarca la educación inicial y primaria en matemáticas. Empieza con matemáticas a temprana edad y con tabletas porque creemos que la matemática, como todo, debe enseñarse con las manos en la masa. Por eso, en esencia, desarrollamos muchas aplicaciones móviles, cada una dedicada a un concepto matemático particular. Por ejemplo, tomemos "área". Cuando uno trabaja un concepto como área... bueno, siempre brindamos unas herramientas que invitan al chico a experimentar para aprender. Así, si lo que nos interesa es el área, lo que resulta natural es dividirla en piezas con esta forma y simplemente contar cuántas piezas se requieren para cubrir el área. Y este pequeño ejercicio da una buena idea preliminar del concepto de área. Continuando, ¿qué pasa con el área de esta figura? Bueno, si tratamos de cuadricularla eso no funciona bien, ¿no? En cambio, podemos experimentar con estas herramientas, siguiendo una guía, por ensayo y error, hasta que en un momento descubriremos que, entre las varias transformaciones legítimas, existe una en la que si cortamos la figura podemos reagrupar las partes, pegarlas, y luego cuadricular el área como hicimos antes. (Aplausos) Pero esta transformación particular no cambió el área de la figura original así que niñas y niños de 6 años que juegan con esto han descubierto un algoritmo ingenioso para calcular el área de cualquier paralelogramo. No reemplazamos a los maestros, por cierto. Creemos en facultar a los maestros, no en reemplazarlos. Siguiendo, ¿qué pasa con el área del triángulo? Luego de un ensayo y error dirigido se descubre, con o sin ayuda, que se puede duplicar la figura original para luego transponerla, pegarla a la figura original y después proceder como hicimos antes: cortamos, reagrupamos, pegamos — uy— pegamos y cuadriculamos. Pero esta transformación ha duplicado el área de la figura original, y por lo tanto acabamos de aprender que el área del triángulo equivale al área de este rectángulo dividido por dos. Lo descubrimos mediante autoexploración. Así, además de aprender algo útil de geometría se aprenden estrategias científicas bastante sofisticadas como la reducción que es el arte de transformar un problema complejo en uno simple, o la generalización que es el centro de cualquier disciplina científica, o el hecho de que algunas propiedades son invariables bajo ciertas transformaciones. Y todo esto es algo que los pequeños pueden aprender con sus aplicaciones móviles. Actualmente, hacemos lo siguiente. Primero, descomponemos el plan de estudios de matemática inicial y primaria en muchas de estas aplicaciones. Y, como no podemos hacerlo por nuestra cuenta, hemos desarrollado una herramienta muy elegante que cualquier autor, padre o, de hecho cualquier persona interesada en enseñar matemática, puede usar esta herramienta para desarrollar aplicaciones similares en tabletas, sin programación. Y, por último, estamos armando un ecosistema adaptativo que se ajustará a diferentes alumnos con aplicaciones diferentes de acuerdo a su evolución en el aprendizaje. La fuerza subyacente que impulsa este proyecto es mi colega Shmulik London, y, ya ven, igual que hizo Salman hace unos 90 años, el truco es rodearse de personas brillantes, porque al final, en todo están las personas. Hace unos años caminaba por Tel Aviv, vi este graffiti en una pared y me pareció tan convincente que ahora lo predico a mis estudiantes, y me gustaría hacerlo con Uds. No sé cuántos de los aquí presentes están familiarizados con el término "Mensch". Básicamente significa "ser humano" y hacer lo correcto. Dicho esto, este graffiti dice: "Alta tecnología, tecnología 'schmigh'. Lo más importante es ser un 'Mensch'". (Risas) Gracias. (Aplausos) (Aplausos)
